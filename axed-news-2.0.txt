# axed-news-2.0.txt — one-file launcher
# How to use on Render:
#  - Add this file to your repo.
#  - Start Command: python axed-news-2.0.txt
#  - Environment: BOT_TOKEN, CHANNEL_ID
import os, sys, io, base64, zipfile, subprocess

PAYLOAD_B64 = """
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
"""

def unpack_if_needed():
    if os.path.exists("main.py") and os.path.exists("requirements.txt"):
        print("✓ Project already unpacked.")
        return
    print("→ Unpacking embedded project...")
    data = base64.b64decode(PAYLOAD_B64)
    with zipfile.ZipFile(io.BytesIO(data)) as z:
        for member in z.namelist():
            target = member
            if member.startswith("axed-news-2.0/"):
                target = member[len("axed-news-2.0/"):]
            if not target:
                continue
            if member.endswith("/"):
                os.makedirs(target, exist_ok=True)
            else:
                os.makedirs(os.path.dirname(target) or ".", exist_ok=True)
                with z.open(member) as src, open(target, "wb") as dst:
                    dst.write(src.read())
    print("✓ Unpacked.")

def pip_install():
    if not os.path.exists("requirements.txt"):
        print("! requirements.txt not found — skipping pip install")
        return
    cmd = [sys.executable, "-m", "pip", "install", "-r", "requirements.txt"]
    print("→ Installing dependencies:", " ".join(cmd))
    r = subprocess.call(cmd)
    print("✓ Dependencies installed." if r == 0 else f"! pip exit code: {r}")

def main():
    unpack_if_needed()
    pip_install()
    os.execv(sys.executable, [sys.executable, "main.py"])

if __name__ == "__main__":
    main()
